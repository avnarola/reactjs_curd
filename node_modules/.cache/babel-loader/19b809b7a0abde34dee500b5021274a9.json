{"ast":null,"code":"var _jsxFileName = \"/Users/c175/Documents/Node js/auth_demo/frontend/src/components/login/index.js\";\nimport React, { Component } from 'react';\nimport { Grid, withStyles, TextField, Button, Typography } from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport { withRouter } from 'react-router-dom';\n\nconst style = theme => ({\n  root: {\n    padding: '10px 4px',\n    display: 'flex'\n  },\n  topMargin: {\n    marginTop: \"100px\"\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  }\n});\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      var email = this.state.email;\n      var password = this.state.password;\n      var data = {\n        email: email,\n        password: password\n      };\n      fetch('http://localhost:5000/authenticate', {\n        method: 'POST',\n        body: data,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          this.props.history.push('/');\n        } else {\n          const error = new Error(res.error);\n          throw error;\n        }\n      }).catch(err => {\n        console.error(err);\n        alert('Error logging in please try again');\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      error: ''\n    };\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password,\n          error = _this$state.error;\n    return React.createElement(Container, {\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      className: \"my-16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h6\",\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Sign In\"), error && React.createElement(\"p\", {\n      className: \"text-center text-red-800\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \" \", error)), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"outlined-email-input\",\n      label: \"Email\",\n      className: classes.textField,\n      value: email,\n      type: \"email\",\n      name: \"email\",\n      autoComplete: \"email\",\n      fullWidth: true,\n      margin: \"normal\",\n      variant: \"outlined\",\n      onChange: e => this.handleChange(e),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"outlined-email-input\",\n      label: \"Password\",\n      className: classes.textField,\n      type: \"password\",\n      value: password,\n      fullWidth: true,\n      name: \"password\",\n      autoComplete: \"password\",\n      margin: \"normal\",\n      variant: \"outlined\",\n      onChange: e => this.handleChange(e),\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outlined\",\n      fullWidth: true,\n      onClick: e => this.handleSubmit(e),\n      color: \"primary\",\n      className: `${classes.button} uppercase`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Login\"))));\n  }\n\n  componentWillMount() {\n    if (localStorage.getItem('user')) {\n      this.props.history.push('/');\n    }\n  }\n\n}\n\nexport default withStyles(style)(withRouter(Login));","map":{"version":3,"sources":["/Users/c175/Documents/Node js/auth_demo/frontend/src/components/login/index.js"],"names":["React","Component","Grid","withStyles","TextField","Button","Typography","Container","withRouter","style","theme","root","padding","display","topMargin","marginTop","button","margin","spacing","textField","marginLeft","marginRight","Login","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","email","state","password","data","fetch","method","body","headers","then","res","status","history","push","error","Error","catch","err","console","alert","render","classes","componentWillMount","localStorage","getItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Grid, withStyles, TextField, Button, Typography } from '@material-ui/core';\nimport Container from '@material-ui/core/Container';\nimport { withRouter } from 'react-router-dom';\n\nconst style = (theme) => ({\n  root: {\n    padding: '10px 4px',\n    display: 'flex'\n  },\n  topMargin:{\n    marginTop:\"100px\"\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n})\nclass Login extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      email: '',\n      password: '',\n      error: ''\n    }\n  }\n  render() {\n    const { classes } = this.props;\n    const { email, password, error } = this.state\n    return (\n      <Container maxWidth=\"sm\">\n        <Grid container justify=\"center\" className=\"my-16\">\n          <Grid item xs={12}>\n            <Typography variant=\"h5\" component=\"h6\" className=\"text-center\">\n              Sign In\n            </Typography>\n\n            { error &&\n              <p className=\"text-center text-red-800\"> {error}</p>\n            }\n          </Grid>\n\n          <Grid item xs={12}>\n            <TextField\n              id=\"outlined-email-input\"\n              label=\"Email\"\n              className={classes.textField}\n              value={email}\n              type=\"email\"\n              name=\"email\"\n              autoComplete=\"email\"\n              fullWidth\n              margin=\"normal\"\n              variant=\"outlined\"\n              onChange={(e) => this.handleChange(e)}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} >\n            <TextField\n              id=\"outlined-email-input\"\n              label=\"Password\"\n              className={classes.textField}\n              type=\"password\"\n              value={password}\n              fullWidth\n              name=\"password\"\n              autoComplete=\"password\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              onChange={(e) => this.handleChange(e)}\n              required\n            />\n          </Grid>\n          <Grid item xs={12} >\n            <Button variant=\"outlined\" fullWidth onClick={(e)=>this.handleSubmit(e)} color=\"primary\" className={`${classes.button} uppercase`}>\n              Login\n            </Button>\n          </Grid>\n        </Grid>\n      </Container>\n    )\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  componentWillMount() {\n    if (localStorage.getItem('user')) {\n        this.props.history.push('/');\n  }\n}\n handleSubmit = (e) => {\n    e.preventDefault()\n    var email = this.state.email;\n    var password = this.state.password;\n\n    var data = {\n      email:email,\n      password:password\n    }\n\n fetch('http://localhost:5000/authenticate', {\n  method: 'POST',\n  body: data,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n})\n.then(res => {\n  if (res.status === 200) {\n    this.props.history.push('/');\n  } else {\n    const error = new Error(res.error);\n    throw error;\n  }\n})\n.catch(err => {\n  console.error(err);\n  alert('Error logging in please try again');\n});\n\n\n  }\n}\nexport default withStyles(style)(withRouter(Login));\n"]},"metadata":{},"sourceType":"module"}